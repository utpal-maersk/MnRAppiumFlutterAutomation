<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="6" failed="0" ignored="24" total="54" passed="24">
  <reporter-output>
  </reporter-output>
  <suite name="MyFinanceTestSuite" duration-ms="86459" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:12:43Z">
    <groups>
    </groups>
    <test name="Android-EXECUTION-Device3" duration-ms="67356" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:12:24Z">
      <class name="testScripts.TestScripts">
        <test-method status="PASS" signature="setReportingConfig()[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="setReportingConfig" is-config="true" duration-ms="0" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:11:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setReportingConfig -->
        <test-method status="PASS" signature="invokeTheTestSet(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="invokeTheTestSet" is-config="true" duration-ms="34581" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:11:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4724]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OnePlus 8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeTheTestSet -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:11:51Z" finished-at="2021-06-17T20:11:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_001(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="TC_001(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="TC_001" duration-ms="8136" started-at="2021-06-17T20:11:51Z" description="Verify Interstitial screens." data-provider="regressionDataSet" finished-at="2021-06-17T20:11:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Second Title Screen=Swipe to see more, First Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. See compact view all the invoices, Third Screen Title=More details for invoices, Second Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. Swipe feature., Run Mode=Yes, Third Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. More details for the invoices., Description=Verify Interstitial screens., First Title Screen=MyFinance PreProd}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_001 -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:11:59Z" finished-at="2021-06-17T20:11:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="TC_002(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="TC_002" duration-ms="2694" started-at="2021-06-17T20:11:59Z" description="Verify landing screens." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Description=Verify landing screen functionality, Nav 3 Text=, Top Nav 4=OFFICE, Landing Screen Title=Welcome, Top Nav 3=PORT, Top Nav 2=VESSEL, Top Nav 1=SHIPMENT, Landing Screen Sub Header=Start managing your shipments and logistics, Nav 4 Text=, Nav 1 Text=, Run Mode=Yes, Nav 2 Text=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_002 -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:11:59Z" finished-at="2021-06-17T20:11:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_002(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:02Z" finished-at="2021-06-17T20:12:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="SKIP" signature="TC_003(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="TC_003" duration-ms="1" started-at="2021-06-17T20:12:02Z" description="Verify login feature with invalid password" data-provider="regressionDataSet" finished-at="2021-06-17T20:12:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=mob_user_2, Login Screen Sub Title=Login to your account, Login Screen Title=Welcome back!, Password=Maersk#, Run Mode=No, Description=Verify login feature with invalid password for maerskline., Error Message=Invalid password}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the Test Case.... Run Mode set to 'No']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the Test Case.... Run Mode set to 'No'
at testScripts.TestScripts.TC_003(TestScripts.java:203)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_003 -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:02Z" finished-at="2021-06-17T20:12:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_003(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="updateTestExecutionStatus" is-config="true" duration-ms="1" started-at="2021-06-17T20:12:02Z" finished-at="2021-06-17T20:12:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:02Z" finished-at="2021-06-17T20:12:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_004(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="TC_004(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="TC_004" duration-ms="10288" started-at="2021-06-17T20:12:02Z" description="Verify login feature with invalid username." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=blahblahblah, Password=Maersk@1, Run Mode=Yes, Description=Verify login feature with invalid username for maerskline., Error Message=Invalid username}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_004 -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:12Z" finished-at="2021-06-17T20:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:12Z" finished-at="2021-06-17T20:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_005(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="TC_005(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="TC_005" duration-ms="10190" started-at="2021-06-17T20:12:12Z" description="Verify login feature with locked account." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=locked_account, Password=Maersk#1, Run Mode=Yes, Description=Verify login feature with invalid locked account for maerskline., Error Message=Your account is locked. Please reset your password}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_005 -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="afterClass" is-config="true" duration-ms="1329" started-at="2021-06-17T20:12:22Z" finished-at="2021-06-17T20:12:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:22Z" finished-at="2021-06-17T20:12:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="afterAllTest()[pri:0, instance:testScripts.TestScripts@3bf9ce3e]" name="afterAllTest" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:24Z" finished-at="2021-06-17T20:12:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterAllTest -->
      </class> <!-- testScripts.TestScripts -->
    </test> <!-- Android-EXECUTION-Device3 -->
    <test name="iOS-EXECUTION-Device2" duration-ms="67511" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:12:24Z">
      <class name="testScripts.TestScripts">
        <test-method status="PASS" signature="setReportingConfig()[pri:0, instance:testScripts.TestScripts@f736069]" name="setReportingConfig" is-config="true" duration-ms="0" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:11:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setReportingConfig -->
        <test-method status="PASS" signature="invokeTheTestSet(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testScripts.TestScripts@f736069]" name="invokeTheTestSet" is-config="true" duration-ms="35762" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:11:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4723]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[iPhone 12 Mini]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeTheTestSet -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@f736069]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:11:52Z" finished-at="2021-06-17T20:11:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_001(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="TC_001(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@f736069]" name="TC_001" duration-ms="6964" started-at="2021-06-17T20:11:52Z" description="Verify Interstitial screens." data-provider="regressionDataSet" finished-at="2021-06-17T20:11:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Second Title Screen=Swipe to see more, First Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. See compact view all the invoices, Third Screen Title=More details for invoices, Second Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. Swipe feature., Run Mode=Yes, Third Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. More details for the invoices., Description=Verify Interstitial screens., First Title Screen=MyFinance PreProd}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_001 -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@f736069]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:11:59Z" finished-at="2021-06-17T20:11:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="TC_002(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@f736069]" name="TC_002" duration-ms="2198" started-at="2021-06-17T20:11:59Z" description="Verify landing screens." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Description=Verify landing screen functionality, Nav 3 Text=, Top Nav 4=OFFICE, Landing Screen Title=Welcome, Top Nav 3=PORT, Top Nav 2=VESSEL, Top Nav 1=SHIPMENT, Landing Screen Sub Header=Start managing your shipments and logistics, Nav 4 Text=, Nav 1 Text=, Run Mode=Yes, Nav 2 Text=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_002 -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@f736069]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:11:59Z" finished-at="2021-06-17T20:11:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_002(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@f736069]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:01Z" finished-at="2021-06-17T20:12:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="SKIP" signature="TC_003(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@f736069]" name="TC_003" duration-ms="1" started-at="2021-06-17T20:12:01Z" description="Verify login feature with invalid password" data-provider="regressionDataSet" finished-at="2021-06-17T20:12:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=mob_user_2, Login Screen Sub Title=Login to your account, Login Screen Title=Welcome back!, Password=Maersk#, Run Mode=No, Description=Verify login feature with invalid password for maerskline., Error Message=Invalid password}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the Test Case.... Run Mode set to 'No']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the Test Case.... Run Mode set to 'No'
at testScripts.TestScripts.TC_003(TestScripts.java:203)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_003 -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@f736069]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:01Z" finished-at="2021-06-17T20:12:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_003(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@f736069]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:01Z" finished-at="2021-06-17T20:12:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="TC_004(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@f736069]" name="TC_004" duration-ms="9952" started-at="2021-06-17T20:12:01Z" description="Verify login feature with invalid username." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=blahblahblah, Password=Maersk@1, Run Mode=Yes, Description=Verify login feature with invalid username for maerskline., Error Message=Invalid username}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_004 -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@f736069]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:01Z" finished-at="2021-06-17T20:12:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_004(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@f736069]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:11Z" finished-at="2021-06-17T20:12:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@f736069]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:11Z" finished-at="2021-06-17T20:12:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_005(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="TC_005(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@f736069]" name="TC_005" duration-ms="11071" started-at="2021-06-17T20:12:11Z" description="Verify login feature with locked account." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=locked_account, Password=Maersk#1, Run Mode=Yes, Description=Verify login feature with invalid locked account for maerskline., Error Message=Your account is locked. Please reset your password}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_005 -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testScripts.TestScripts@f736069]" name="afterClass" is-config="true" duration-ms="1450" started-at="2021-06-17T20:12:22Z" finished-at="2021-06-17T20:12:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@f736069]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:22Z" finished-at="2021-06-17T20:12:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="afterAllTest()[pri:0, instance:testScripts.TestScripts@f736069]" name="afterAllTest" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:24Z" finished-at="2021-06-17T20:12:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterAllTest -->
      </class> <!-- testScripts.TestScripts -->
    </test> <!-- iOS-EXECUTION-Device2 -->
    <test name="Android-EXECUTION-Device2" duration-ms="68057" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:12:24Z">
      <class name="testScripts.TestScripts">
        <test-method status="PASS" signature="setReportingConfig()[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="setReportingConfig" is-config="true" duration-ms="0" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:11:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setReportingConfig -->
        <test-method status="PASS" signature="invokeTheTestSet(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="invokeTheTestSet" is-config="true" duration-ms="35415" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:11:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4724]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Samsung Galaxy S21]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeTheTestSet -->
        <test-method status="PASS" signature="TC_001(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="TC_001" duration-ms="7931" started-at="2021-06-17T20:11:52Z" description="Verify Interstitial screens." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Second Title Screen=Swipe to see more, First Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. See compact view all the invoices, Third Screen Title=More details for invoices, Second Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. Swipe feature., Run Mode=Yes, Third Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. More details for the invoices., Description=Verify Interstitial screens., First Title Screen=MyFinance PreProd}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_001 -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:11:52Z" finished-at="2021-06-17T20:11:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_001(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:00Z" finished-at="2021-06-17T20:12:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:00Z" finished-at="2021-06-17T20:12:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_002(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="TC_002(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="TC_002" duration-ms="2429" started-at="2021-06-17T20:12:00Z" description="Verify landing screens." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Description=Verify landing screen functionality, Nav 3 Text=, Top Nav 4=OFFICE, Landing Screen Title=Welcome, Top Nav 3=PORT, Top Nav 2=VESSEL, Top Nav 1=SHIPMENT, Landing Screen Sub Header=Start managing your shipments and logistics, Nav 4 Text=, Nav 1 Text=, Run Mode=Yes, Nav 2 Text=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_002 -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:02Z" finished-at="2021-06-17T20:12:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:02Z" finished-at="2021-06-17T20:12:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_003(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="SKIP" signature="TC_003(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="TC_003" duration-ms="1" started-at="2021-06-17T20:12:02Z" description="Verify login feature with invalid password" data-provider="regressionDataSet" finished-at="2021-06-17T20:12:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=mob_user_2, Login Screen Sub Title=Login to your account, Login Screen Title=Welcome back!, Password=Maersk#, Run Mode=No, Description=Verify login feature with invalid password for maerskline., Error Message=Invalid password}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the Test Case.... Run Mode set to 'No']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the Test Case.... Run Mode set to 'No'
at testScripts.TestScripts.TC_003(TestScripts.java:203)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_003 -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:02Z" finished-at="2021-06-17T20:12:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:02Z" finished-at="2021-06-17T20:12:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_004(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="TC_004(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="TC_004" duration-ms="9891" started-at="2021-06-17T20:12:02Z" description="Verify login feature with invalid username." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=blahblahblah, Password=Maersk@1, Run Mode=Yes, Description=Verify login feature with invalid username for maerskline., Error Message=Invalid username}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_004 -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="updateTestExecutionStatus" is-config="true" duration-ms="1" started-at="2021-06-17T20:12:12Z" finished-at="2021-06-17T20:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="TC_005(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="TC_005" duration-ms="10804" started-at="2021-06-17T20:12:12Z" description="Verify login feature with locked account." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=locked_account, Password=Maersk#1, Run Mode=Yes, Description=Verify login feature with invalid locked account for maerskline., Error Message=Your account is locked. Please reset your password}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_005 -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:12Z" finished-at="2021-06-17T20:12:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_005(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:23Z" finished-at="2021-06-17T20:12:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="afterClass" is-config="true" duration-ms="1445" started-at="2021-06-17T20:12:23Z" finished-at="2021-06-17T20:12:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterAllTest()[pri:0, instance:testScripts.TestScripts@3d6f0054]" name="afterAllTest" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:24Z" finished-at="2021-06-17T20:12:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterAllTest -->
      </class> <!-- testScripts.TestScripts -->
    </test> <!-- Android-EXECUTION-Device2 -->
    <test name="iOS-EXECUTION-Device1" duration-ms="68192" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:12:25Z">
      <class name="testScripts.TestScripts">
        <test-method status="PASS" signature="setReportingConfig()[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="setReportingConfig" is-config="true" duration-ms="0" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:11:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setReportingConfig -->
        <test-method status="PASS" signature="invokeTheTestSet(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="invokeTheTestSet" is-config="true" duration-ms="35838" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:11:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4723]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[iPhone XS]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeTheTestSet -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:11:52Z" finished-at="2021-06-17T20:11:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_001(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="TC_001(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="TC_001" duration-ms="7409" started-at="2021-06-17T20:11:52Z" description="Verify Interstitial screens." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Second Title Screen=Swipe to see more, First Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. See compact view all the invoices, Third Screen Title=More details for invoices, Second Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. Swipe feature., Run Mode=Yes, Third Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. More details for the invoices., Description=Verify Interstitial screens., First Title Screen=MyFinance PreProd}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_001 -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="updateTestExecutionStatus" is-config="true" duration-ms="1" started-at="2021-06-17T20:12:00Z" finished-at="2021-06-17T20:12:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="TC_002(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="TC_002" duration-ms="3151" started-at="2021-06-17T20:12:00Z" description="Verify landing screens." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Description=Verify landing screen functionality, Nav 3 Text=, Top Nav 4=OFFICE, Landing Screen Title=Welcome, Top Nav 3=PORT, Top Nav 2=VESSEL, Top Nav 1=SHIPMENT, Landing Screen Sub Header=Start managing your shipments and logistics, Nav 4 Text=, Nav 1 Text=, Run Mode=Yes, Nav 2 Text=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_002 -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:00Z" finished-at="2021-06-17T20:12:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_002(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:03Z" finished-at="2021-06-17T20:12:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="SKIP" signature="TC_003(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="TC_003" duration-ms="1" started-at="2021-06-17T20:12:03Z" description="Verify login feature with invalid password" data-provider="regressionDataSet" finished-at="2021-06-17T20:12:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=mob_user_2, Login Screen Sub Title=Login to your account, Login Screen Title=Welcome back!, Password=Maersk#, Run Mode=No, Description=Verify login feature with invalid password for maerskline., Error Message=Invalid password}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the Test Case.... Run Mode set to 'No']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the Test Case.... Run Mode set to 'No'
at testScripts.TestScripts.TC_003(TestScripts.java:203)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_003 -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:03Z" finished-at="2021-06-17T20:12:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_003(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="updateTestExecutionStatus" is-config="true" duration-ms="1" started-at="2021-06-17T20:12:03Z" finished-at="2021-06-17T20:12:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:03Z" finished-at="2021-06-17T20:12:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_004(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="TC_004(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="TC_004" duration-ms="10324" started-at="2021-06-17T20:12:03Z" description="Verify login feature with invalid username." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=blahblahblah, Password=Maersk@1, Run Mode=Yes, Description=Verify login feature with invalid username for maerskline., Error Message=Invalid username}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_004 -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:13Z" finished-at="2021-06-17T20:12:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:13Z" finished-at="2021-06-17T20:12:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_005(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="TC_005(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="TC_005" duration-ms="9950" started-at="2021-06-17T20:12:13Z" description="Verify login feature with locked account." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=locked_account, Password=Maersk#1, Run Mode=Yes, Description=Verify login feature with invalid locked account for maerskline., Error Message=Your account is locked. Please reset your password}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_005 -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:23Z" finished-at="2021-06-17T20:12:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="afterClass" is-config="true" duration-ms="1405" started-at="2021-06-17T20:12:23Z" finished-at="2021-06-17T20:12:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterAllTest()[pri:0, instance:testScripts.TestScripts@32ee6fee]" name="afterAllTest" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:25Z" finished-at="2021-06-17T20:12:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterAllTest -->
      </class> <!-- testScripts.TestScripts -->
    </test> <!-- iOS-EXECUTION-Device1 -->
    <test name="Android-EXECUTION-Device1" duration-ms="77524" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:12:34Z">
      <class name="testScripts.TestScripts">
        <test-method status="PASS" signature="setReportingConfig()[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="setReportingConfig" is-config="true" duration-ms="0" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:11:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setReportingConfig -->
        <test-method status="PASS" signature="invokeTheTestSet(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="invokeTheTestSet" is-config="true" duration-ms="41337" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:11:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4724]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Google Pixel 3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeTheTestSet -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="createTestDescription" is-config="true" duration-ms="1" started-at="2021-06-17T20:11:58Z" finished-at="2021-06-17T20:11:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_001(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="TC_001(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="TC_001" duration-ms="9548" started-at="2021-06-17T20:11:58Z" description="Verify Interstitial screens." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Second Title Screen=Swipe to see more, First Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. See compact view all the invoices, Third Screen Title=More details for invoices, Second Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. Swipe feature., Run Mode=Yes, Third Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. More details for the invoices., Description=Verify Interstitial screens., First Title Screen=MyFinance PreProd}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_001 -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:07Z" finished-at="2021-06-17T20:12:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="TC_002(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="TC_002" duration-ms="3010" started-at="2021-06-17T20:12:07Z" description="Verify landing screens." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Description=Verify landing screen functionality, Nav 3 Text=, Top Nav 4=OFFICE, Landing Screen Title=Welcome, Top Nav 3=PORT, Top Nav 2=VESSEL, Top Nav 1=SHIPMENT, Landing Screen Sub Header=Start managing your shipments and logistics, Nav 4 Text=, Nav 1 Text=, Run Mode=Yes, Nav 2 Text=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_002 -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:07Z" finished-at="2021-06-17T20:12:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_002(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:10Z" finished-at="2021-06-17T20:12:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="createTestDescription" is-config="true" duration-ms="1" started-at="2021-06-17T20:12:10Z" finished-at="2021-06-17T20:12:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_003(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="SKIP" signature="TC_003(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="TC_003" duration-ms="1" started-at="2021-06-17T20:12:10Z" description="Verify login feature with invalid password" data-provider="regressionDataSet" finished-at="2021-06-17T20:12:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=mob_user_2, Login Screen Sub Title=Login to your account, Login Screen Title=Welcome back!, Password=Maersk#, Run Mode=No, Description=Verify login feature with invalid password for maerskline., Error Message=Invalid password}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the Test Case.... Run Mode set to 'No']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the Test Case.... Run Mode set to 'No'
at testScripts.TestScripts.TC_003(TestScripts.java:203)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_003 -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:10Z" finished-at="2021-06-17T20:12:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:10Z" finished-at="2021-06-17T20:12:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_004(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="TC_004(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="TC_004" duration-ms="11517" started-at="2021-06-17T20:12:10Z" description="Verify login feature with invalid username." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=blahblahblah, Password=Maersk@1, Run Mode=Yes, Description=Verify login feature with invalid username for maerskline., Error Message=Invalid username}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_004 -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:22Z" finished-at="2021-06-17T20:12:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="TC_005(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="TC_005" duration-ms="10563" started-at="2021-06-17T20:12:22Z" description="Verify login feature with locked account." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=locked_account, Password=Maersk#1, Run Mode=Yes, Description=Verify login feature with invalid locked account for maerskline., Error Message=Your account is locked. Please reset your password}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_005 -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:22Z" finished-at="2021-06-17T20:12:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_005(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:32Z" finished-at="2021-06-17T20:12:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="afterClass" is-config="true" duration-ms="1448" started-at="2021-06-17T20:12:32Z" finished-at="2021-06-17T20:12:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterAllTest()[pri:0, instance:testScripts.TestScripts@7ea9e1e2]" name="afterAllTest" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:34Z" finished-at="2021-06-17T20:12:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterAllTest -->
      </class> <!-- testScripts.TestScripts -->
    </test> <!-- Android-EXECUTION-Device1 -->
    <test name="iOS-EXECUTION-Device3" duration-ms="86459" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:12:43Z">
      <class name="testScripts.TestScripts">
        <test-method status="PASS" signature="createTestRun()[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="createTestRun" is-config="true" duration-ms="119" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:11:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestRun -->
        <test-method status="PASS" signature="setReportingConfig()[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="setReportingConfig" is-config="true" duration-ms="0" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:11:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setReportingConfig -->
        <test-method status="PASS" signature="invokeTheTestSet(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="invokeTheTestSet" is-config="true" duration-ms="25874" started-at="2021-06-17T20:11:16Z" finished-at="2021-06-17T20:11:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4723]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[iPhone SE 2020]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeTheTestSet -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="createTestDescription" is-config="true" duration-ms="1" started-at="2021-06-17T20:11:42Z" finished-at="2021-06-17T20:11:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_001(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="TC_001(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="TC_001" duration-ms="15774" started-at="2021-06-17T20:11:42Z" description="Verify Interstitial screens." data-provider="regressionDataSet" finished-at="2021-06-17T20:11:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Second Title Screen=Swipe to see more, First Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. See compact view all the invoices, Third Screen Title=More details for invoices, Second Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. Swipe feature., Run Mode=Yes, Third Screen Description=This is a description for myFinance App for onboarding, a simple and short sentence. More details for the invoices., Description=Verify Interstitial screens., First Title Screen=MyFinance PreProd}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_001 -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:11:58Z" finished-at="2021-06-17T20:11:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="createTestDescription" is-config="true" duration-ms="1" started-at="2021-06-17T20:11:58Z" finished-at="2021-06-17T20:11:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_002(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="TC_002(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="TC_002" duration-ms="11753" started-at="2021-06-17T20:11:58Z" description="Verify landing screens." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Description=Verify landing screen functionality, Nav 3 Text=, Top Nav 4=OFFICE, Landing Screen Title=Welcome, Top Nav 3=PORT, Top Nav 2=VESSEL, Top Nav 1=SHIPMENT, Landing Screen Sub Header=Start managing your shipments and logistics, Nav 4 Text=, Nav 1 Text=, Run Mode=Yes, Nav 2 Text=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_002 -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:10Z" finished-at="2021-06-17T20:12:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="SKIP" signature="TC_003(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="TC_003" duration-ms="1" started-at="2021-06-17T20:12:10Z" description="Verify login feature with invalid password" data-provider="regressionDataSet" finished-at="2021-06-17T20:12:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=mob_user_2, Login Screen Sub Title=Login to your account, Login Screen Title=Welcome back!, Password=Maersk#, Run Mode=No, Description=Verify login feature with invalid password for maerskline., Error Message=Invalid password}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the Test Case.... Run Mode set to 'No']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the Test Case.... Run Mode set to 'No'
at testScripts.TestScripts.TC_003(TestScripts.java:203)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_003 -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:10Z" finished-at="2021-06-17T20:12:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_003(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:10Z" finished-at="2021-06-17T20:12:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="TC_004(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="TC_004" duration-ms="15262" started-at="2021-06-17T20:12:10Z" description="Verify login feature with invalid username." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=blahblahblah, Password=Maersk@1, Run Mode=Yes, Description=Verify login feature with invalid username for maerskline., Error Message=Invalid username}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_004 -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="createTestDescription" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:10Z" finished-at="2021-06-17T20:12:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_004(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:25Z" finished-at="2021-06-17T20:12:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="createTestDescription(java.lang.reflect.Method)[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="createTestDescription" is-config="true" duration-ms="1" started-at="2021-06-17T20:12:25Z" finished-at="2021-06-17T20:12:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TestScripts.TC_005(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestDescription -->
        <test-method status="PASS" signature="TC_005(java.util.Hashtable)[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="TC_005" duration-ms="16238" started-at="2021-06-17T20:12:25Z" description="Verify login feature with locked account." data-provider="regressionDataSet" finished-at="2021-06-17T20:12:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=locked_account, Password=Maersk#1, Run Mode=Yes, Description=Verify login feature with invalid locked account for maerskline., Error Message=Your account is locked. Please reset your password}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_005 -->
        <test-method status="PASS" signature="updateTestExecutionStatus()[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="updateTestExecutionStatus" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:41Z" finished-at="2021-06-17T20:12:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTestExecutionStatus -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="afterClass" is-config="true" duration-ms="1398" started-at="2021-06-17T20:12:41Z" finished-at="2021-06-17T20:12:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterAllTest()[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="afterAllTest" is-config="true" duration-ms="0" started-at="2021-06-17T20:12:43Z" finished-at="2021-06-17T20:12:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterAllTest -->
        <test-method status="PASS" signature="afterTestSuite()[pri:0, instance:testScripts.TestScripts@2fb3536e]" name="afterTestSuite" is-config="true" duration-ms="231" started-at="2021-06-17T20:12:43Z" finished-at="2021-06-17T20:12:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestSuite -->
      </class> <!-- testScripts.TestScripts -->
    </test> <!-- iOS-EXECUTION-Device3 -->
  </suite> <!-- MyFinanceTestSuite -->
</testng-results>
